I"_<h1 id="1110번-더하기-사이클">1110번 더하기 사이클</h1>
<p>0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다.
26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.
N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.</p>

<blockquote>
  <p>Input) <br />
26</p>
</blockquote>

<blockquote>
  <p>Output) <br />
4</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>최초 입력값(n)이 10보다 작을 경우 앞에 0을 붙이는 로직을 while문 안에서 수행하다 보니 루프를 1번 진행한 후 10보다 작은 수(n을 new_n값으로 치환할 때)가 될 경우 0을 한번 더 붙여버리는 문제가 발생하였다.</p>
<h2 id="문제해결">문제해결</h2>
<p>최초 입력값(n)이 10보다 작을 경우에만 앞에 0을 붙이도록 while문 바깥쪽에서 수행하도록 변경하였다.
<del>코드가 더러워졌다는 단점이 있다..</del></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="n">n</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>
<span class="n">new_n</span><span class="p">,</span><span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="mi">0</span>
<span class="n">first_n</span> <span class="o">=</span> <span class="n">n</span>
<span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>
    <span class="n">n</span> <span class="o">=</span> <span class="s">'0'</span> <span class="o">+</span> <span class="n">n</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="n">count</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">break</span>
    <span class="n">rs</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">+</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
    <span class="k">if</span> <span class="n">rs</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="p">:</span>
        <span class="n">new_n</span> <span class="o">=</span> <span class="n">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rs</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">new_n</span> <span class="o">=</span> <span class="n">n</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rs</span><span class="p">)</span>
    <span class="n">n</span> <span class="o">=</span> <span class="n">new_n</span>
    <span class="n">count</span> <span class="o">=</span> <span class="n">count</span><span class="o">+</span><span class="mi">1</span>
    <span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">new_n</span><span class="p">)</span> <span class="o">==</span> <span class="nb">int</span><span class="p">(</span><span class="n">first_n</span><span class="p">):</span>
        <span class="k">break</span>
<span class="k">print</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
:ET